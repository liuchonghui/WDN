
import com.android.builder.core.DefaultManifestParser

apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile "com.android.support:support-v4:${SUPPORT_V4_VERSION}"
    compile "com.android.support:recyclerview-v7:${COMPILE_SUGGEST_SDK_VERSION}"
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.sinagame:WindowAttacher:1.0.0'
    compile "tools.android:Overlay:${OVERLAY_VERSION}"
    String useCompactFresco = "${USE_COMPACT_FRESCO}"
    if ("true".equals(useCompactFresco)) {
        compile 'tools.android:ImageLoaderCompactWithFresco:1.0.4'
    }
    String useCompactGlide = "${USE_COMPACT_GLIDE}"
    if ("true".equals(useCompactGlide)) {
        compile 'tools.android:ImageLoaderCompactWithGlide:1.0.4'
    }
    String useCompactPicasso = "${USE_COMPACT_PICASSO}"
    if ("true".equals(useCompactPicasso)) {
        compile 'tools.android:ImageLoaderCompactWithPicasso:1.0.0'
    }
    String useCompactUil = "${USE_COMPACT_UIL}"
    if ("true".equals(useCompactUil)) {
        compile 'tools.android:ImageLoaderCompactWithUil:1.0.0'
    }
}

android {
    compileSdkVersion COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion "${BUILD_TOOLS_VERSION}"

    defaultConfig {
        multiDexEnabled true
    }

    dexOptions {
        jumboMode = true
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    android {
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES.txt'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/dependencies.txt'
            exclude 'META-INF/LGPL2.1'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}